
@using System.Linq
@using FluentSharp.CoreLib
@using TeamMentor.CoreLib

@{
    var userData = TM_UserData.Current;    
    var max      = "max".request_Value_Int(1000);
    var who      = "who".request_Value_String();
    var action   = "action".request_Value_String();
    var activities = (from tmUser in userData.tmUsers()
                      from activity in tmUser.UserActivities
                      where (who   .notValid() || activity.Who   .regEx(who   )) &&
                            (action.notValid() || activity.Action.regEx(action))
                      orderby activity.When
                      select activity).Reverse().toList().take(max);
}
@Raw(activities.javascript_Serialize())